version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-trackmate}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-trackmate}"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  kafka:
    image: docker.redpanda.com/vectorized/redpanda:v24.2.11
    command:
      - redpanda start
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr=PLAINTEXT://kafka:9092
      - --overprovisioned
      - --smp=1
      - --memory=1G
      - --reserve-memory=0M
      - --node-id=0
      - --check=false
    ports:
      - "9092:9092"
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: DockerFile
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-trackmate}?schema=public
      NODE_ENV: production
      PORT: 3000
      KAFKA_BROKERS: kafka:9092
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
    restart: unless-stopped

volumes:
  db_data: